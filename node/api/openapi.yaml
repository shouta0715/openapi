openapi: 3.0.3
info:
  title: 口コミサイト API
  description: |
    # Features
    - Get reviews
    - Post reviews
  termsOfService: https://testylog.com/terms
  contact:
    name: Customer Support
    url: https://testylog.com/support
    email: example@example.com
  license:
    name: MIT License
    url: https://testylog.com/support
  version: 1.0.0
servers:
- url: "http://localhost:80/{version}"
  description: Development
  variables:
    version:
      default: v2
      enum:
      - v1
      - v2
- url: "http://localhost:product/{version}"
  description: Products
  variables:
    version:
      default: v1
      enum:
      - v1
security:
- api_key: []
tags:
- name: reviews
  description: Shop review operations
paths:
  /shops/{shopId}/reviews:
    get:
      tags:
      - shops
      - reviews
      summary: Get specified shop reviews
      description: (descriptions) Get Specified shop reviews
      operationId: shopsShopIdReviewsGET
      parameters:
      - name: shopId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success operations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
                x-content-type: application/json
      deprecated: false
      security: []
      x-swagger-router-controller: Shops
    post:
      tags:
      - shops
      - reviews
      summary: Create reviews
      operationId: shopsShopIdReviewsPOST
      parameters:
      - name: shopId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Api-Key
        in: header
        description: Request user's identification
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: XXXX-XXXX-XXXX-XXXX
      - name: token
        in: cookie
        description: One Time token
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: XXXX-XXXX-XXXX-XXXX
      requestBody:
        description: Contents of reviews
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Review'
        required: true
      responses:
        "201":
          description: Success operations
          headers:
            location:
              description: New URL of created reviews
              style: simple
              explode: false
              schema:
                type: string
                format: url
        "400":
          description: Client Side Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
      security:
      - api_key: []
      x-swagger-router-controller: Shops
components:
  schemas:
    Review:
      type: object
      properties:
        score:
          type: integer
        comment:
          type: string
      example:
        score: 0
        comment: comment
    ClientError:
      type: object
      properties:
        code:
          type: string
        type:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ClientError_errors'
    ClientError_errors:
      type: object
      properties:
        field:
          type: string
        code:
          type: string
  responses:
    "400-BadRequest":
      description: Client Side Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientError'
  securitySchemes:
    api_key:
      type: apiKey
      description: API KEY Authorization
      name: X-Api-Key
      in: header
